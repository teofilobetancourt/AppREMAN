// server.js
const WebSocket = require('ws');
const http = require('http');

// Crear un servidor HTTP para manejar el WebSocket
const server = http.createServer();

const wss = new WebSocket.Server({ server });

// Contador para generar identificadores Ãºnicos
let userIdCounter = 1;

wss.on('connection', (ws, request) => {
  const clientIp = request.socket.remoteAddress; // Obtener la IP del cliente
  const userId = `Reliabytics ${userIdCounter++}`; // Asignar un nuevo ID de usuario en formato "Reliabytics Usuario X"

  console.log(`New client connected from IP: ${clientIp} with user ID: ${userId}`);
  
  // Enviar mensaje con el ID de usuario
  ws.send(`Welcome! Your user ID is ${userId}`);
  
  // Enviar mensaje con la IP del cliente
  ws.send(`New client connected from IP: ${clientIp}`);

  ws.on('message', message => {
    console.log(`Received message from ${userId} => ${message}`);
    ws.send(`${userId}, you sent -> ${message}`);
  });

  ws.on('close', () => {
    console.log(`Client with ${userId} and IP ${clientIp} has disconnected`);
  });
});

server.listen(8080, () => {
  console.log('WebSocket server is running on ws://localhost:8080');
});
